Grammar

    0 $accept: input $end

    1 input: STRNAME KEY_END_ID STRNAME-list annot

    2 annot: '[' expr ']'
    3      | %empty

    4 expr-list: expr-list expr
    5          | %empty

    6 expr: expr-seq
    7     | expr-par
    8     | expr-fallback
    9     | expr-opt
   10     | expr-alt
   11     | simple-expr

   12 expr-seq: '(' expr-list ')' KEY_SEQ '(' expr-list ')'

   13 expr-par: '(' expr-list ')' KEY_PAR '(' expr-list ')'

   14 expr-fallback: KEY_FALLBACK '(' '(' expr-list ')' ',' '(' expr-list ')' ')'

   15 expr-opt: KEY_OPT '(' '(' expr-list ')' ')'

   16 expr-alt: '(' expr-list ')' KEY_ALT '(' expr-list ')'

   17 simple-expr: simple-seq
   18            | simple-par
   19            | simple-fallback
   20            | simple-opt
   21            | simple-alt

   22 simple-seq: STRNAME KEY_SEQ STRNAME

   23 simple-par: STRNAME KEY_PAR STRNAME

   24 simple-fallback: KEY_FALLBACK '(' STRNAME ',' STRNAME ')'

   25 simple-opt: KEY_OPT '(' STRNAME ')'

   26 simple-alt: STRNAME KEY_ALT STRNAME

   27 STRNAME-list: STRNAME-list STRNAME
   28             | %empty


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 12 13 14 15 16 24 25
    ')' (41) 12 13 14 15 16 24 25
    ',' (44) 14 24
    '[' (91) 2
    ']' (93) 2
    error (256)
    KEY_END_ID (258) 1
    KEY_SEQ <sval> (259) 12 22
    KEY_PAR <sval> (260) 13 23
    KEY_FALLBACK <sval> (261) 14 24
    KEY_OPT <sval> (262) 15 25
    KEY_ALT <sval> (263) 16 26
    STRNAME <sval> (264) 1 22 23 24 25 26 27


Nonterminals, with rules where they appear

    $accept (15)
        on left: 0
    input <annot> (16)
        on left: 1
        on right: 0
    annot <annot> (17)
        on left: 2 3
        on right: 1
    expr-list <annot> (18)
        on left: 4 5
        on right: 4 12 13 14 15 16
    expr <annot> (19)
        on left: 6 7 8 9 10 11
        on right: 2 4
    expr-seq <annot> (20)
        on left: 12
        on right: 6
    expr-par <annot> (21)
        on left: 13
        on right: 7
    expr-fallback <annot> (22)
        on left: 14
        on right: 8
    expr-opt <annot> (23)
        on left: 15
        on right: 9
    expr-alt <annot> (24)
        on left: 16
        on right: 10
    simple-expr <annot> (25)
        on left: 17 18 19 20 21
        on right: 11
    simple-seq <annot> (26)
        on left: 22
        on right: 17
    simple-par <annot> (27)
        on left: 23
        on right: 18
    simple-fallback <annot> (28)
        on left: 24
        on right: 19
    simple-opt <annot> (29)
        on left: 25
        on right: 20
    simple-alt <annot> (30)
        on left: 26
        on right: 21
    STRNAME-list <vstring> (31)
        on left: 27 28
        on right: 1 27


State 0

    0 $accept: . input $end

    STRNAME  shift, and go to state 1

    input  go to state 2


State 1

    1 input: STRNAME . KEY_END_ID STRNAME-list annot

    KEY_END_ID  shift, and go to state 3


State 2

    0 $accept: input . $end

    $end  shift, and go to state 4


State 3

    1 input: STRNAME KEY_END_ID . STRNAME-list annot

    $default  reduce using rule 28 (STRNAME-list)

    STRNAME-list  go to state 5


State 4

    0 $accept: input $end .

    $default  accept


State 5

    1 input: STRNAME KEY_END_ID STRNAME-list . annot
   27 STRNAME-list: STRNAME-list . STRNAME

    STRNAME  shift, and go to state 6
    '['      shift, and go to state 7

    $default  reduce using rule 3 (annot)

    annot  go to state 8


State 6

   27 STRNAME-list: STRNAME-list STRNAME .

    $default  reduce using rule 27 (STRNAME-list)


State 7

    2 annot: '[' . expr ']'

    KEY_FALLBACK  shift, and go to state 9
    KEY_OPT       shift, and go to state 10
    STRNAME       shift, and go to state 11
    '('           shift, and go to state 12

    expr             go to state 13
    expr-seq         go to state 14
    expr-par         go to state 15
    expr-fallback    go to state 16
    expr-opt         go to state 17
    expr-alt         go to state 18
    simple-expr      go to state 19
    simple-seq       go to state 20
    simple-par       go to state 21
    simple-fallback  go to state 22
    simple-opt       go to state 23
    simple-alt       go to state 24


State 8

    1 input: STRNAME KEY_END_ID STRNAME-list annot .

    $default  reduce using rule 1 (input)


State 9

   14 expr-fallback: KEY_FALLBACK . '(' '(' expr-list ')' ',' '(' expr-list ')' ')'
   24 simple-fallback: KEY_FALLBACK . '(' STRNAME ',' STRNAME ')'

    '('  shift, and go to state 25


State 10

   15 expr-opt: KEY_OPT . '(' '(' expr-list ')' ')'
   25 simple-opt: KEY_OPT . '(' STRNAME ')'

    '('  shift, and go to state 26


State 11

   22 simple-seq: STRNAME . KEY_SEQ STRNAME
   23 simple-par: STRNAME . KEY_PAR STRNAME
   26 simple-alt: STRNAME . KEY_ALT STRNAME

    KEY_SEQ  shift, and go to state 27
    KEY_PAR  shift, and go to state 28
    KEY_ALT  shift, and go to state 29


State 12

   12 expr-seq: '(' . expr-list ')' KEY_SEQ '(' expr-list ')'
   13 expr-par: '(' . expr-list ')' KEY_PAR '(' expr-list ')'
   16 expr-alt: '(' . expr-list ')' KEY_ALT '(' expr-list ')'

    $default  reduce using rule 5 (expr-list)

    expr-list  go to state 30


State 13

    2 annot: '[' expr . ']'

    ']'  shift, and go to state 31


State 14

    6 expr: expr-seq .

    $default  reduce using rule 6 (expr)


State 15

    7 expr: expr-par .

    $default  reduce using rule 7 (expr)


State 16

    8 expr: expr-fallback .

    $default  reduce using rule 8 (expr)


State 17

    9 expr: expr-opt .

    $default  reduce using rule 9 (expr)


State 18

   10 expr: expr-alt .

    $default  reduce using rule 10 (expr)


State 19

   11 expr: simple-expr .

    $default  reduce using rule 11 (expr)


State 20

   17 simple-expr: simple-seq .

    $default  reduce using rule 17 (simple-expr)


State 21

   18 simple-expr: simple-par .

    $default  reduce using rule 18 (simple-expr)


State 22

   19 simple-expr: simple-fallback .

    $default  reduce using rule 19 (simple-expr)


State 23

   20 simple-expr: simple-opt .

    $default  reduce using rule 20 (simple-expr)


State 24

   21 simple-expr: simple-alt .

    $default  reduce using rule 21 (simple-expr)


State 25

   14 expr-fallback: KEY_FALLBACK '(' . '(' expr-list ')' ',' '(' expr-list ')' ')'
   24 simple-fallback: KEY_FALLBACK '(' . STRNAME ',' STRNAME ')'

    STRNAME  shift, and go to state 32
    '('      shift, and go to state 33


State 26

   15 expr-opt: KEY_OPT '(' . '(' expr-list ')' ')'
   25 simple-opt: KEY_OPT '(' . STRNAME ')'

    STRNAME  shift, and go to state 34
    '('      shift, and go to state 35


State 27

   22 simple-seq: STRNAME KEY_SEQ . STRNAME

    STRNAME  shift, and go to state 36


State 28

   23 simple-par: STRNAME KEY_PAR . STRNAME

    STRNAME  shift, and go to state 37


State 29

   26 simple-alt: STRNAME KEY_ALT . STRNAME

    STRNAME  shift, and go to state 38


State 30

    4 expr-list: expr-list . expr
   12 expr-seq: '(' expr-list . ')' KEY_SEQ '(' expr-list ')'
   13 expr-par: '(' expr-list . ')' KEY_PAR '(' expr-list ')'
   16 expr-alt: '(' expr-list . ')' KEY_ALT '(' expr-list ')'

    KEY_FALLBACK  shift, and go to state 9
    KEY_OPT       shift, and go to state 10
    STRNAME       shift, and go to state 11
    '('           shift, and go to state 12
    ')'           shift, and go to state 39

    expr             go to state 40
    expr-seq         go to state 14
    expr-par         go to state 15
    expr-fallback    go to state 16
    expr-opt         go to state 17
    expr-alt         go to state 18
    simple-expr      go to state 19
    simple-seq       go to state 20
    simple-par       go to state 21
    simple-fallback  go to state 22
    simple-opt       go to state 23
    simple-alt       go to state 24


State 31

    2 annot: '[' expr ']' .

    $default  reduce using rule 2 (annot)


State 32

   24 simple-fallback: KEY_FALLBACK '(' STRNAME . ',' STRNAME ')'

    ','  shift, and go to state 41


State 33

   14 expr-fallback: KEY_FALLBACK '(' '(' . expr-list ')' ',' '(' expr-list ')' ')'

    $default  reduce using rule 5 (expr-list)

    expr-list  go to state 42


State 34

   25 simple-opt: KEY_OPT '(' STRNAME . ')'

    ')'  shift, and go to state 43


State 35

   15 expr-opt: KEY_OPT '(' '(' . expr-list ')' ')'

    $default  reduce using rule 5 (expr-list)

    expr-list  go to state 44


State 36

   22 simple-seq: STRNAME KEY_SEQ STRNAME .

    $default  reduce using rule 22 (simple-seq)


State 37

   23 simple-par: STRNAME KEY_PAR STRNAME .

    $default  reduce using rule 23 (simple-par)


State 38

   26 simple-alt: STRNAME KEY_ALT STRNAME .

    $default  reduce using rule 26 (simple-alt)


State 39

   12 expr-seq: '(' expr-list ')' . KEY_SEQ '(' expr-list ')'
   13 expr-par: '(' expr-list ')' . KEY_PAR '(' expr-list ')'
   16 expr-alt: '(' expr-list ')' . KEY_ALT '(' expr-list ')'

    KEY_SEQ  shift, and go to state 45
    KEY_PAR  shift, and go to state 46
    KEY_ALT  shift, and go to state 47


State 40

    4 expr-list: expr-list expr .

    $default  reduce using rule 4 (expr-list)


State 41

   24 simple-fallback: KEY_FALLBACK '(' STRNAME ',' . STRNAME ')'

    STRNAME  shift, and go to state 48


State 42

    4 expr-list: expr-list . expr
   14 expr-fallback: KEY_FALLBACK '(' '(' expr-list . ')' ',' '(' expr-list ')' ')'

    KEY_FALLBACK  shift, and go to state 9
    KEY_OPT       shift, and go to state 10
    STRNAME       shift, and go to state 11
    '('           shift, and go to state 12
    ')'           shift, and go to state 49

    expr             go to state 40
    expr-seq         go to state 14
    expr-par         go to state 15
    expr-fallback    go to state 16
    expr-opt         go to state 17
    expr-alt         go to state 18
    simple-expr      go to state 19
    simple-seq       go to state 20
    simple-par       go to state 21
    simple-fallback  go to state 22
    simple-opt       go to state 23
    simple-alt       go to state 24


State 43

   25 simple-opt: KEY_OPT '(' STRNAME ')' .

    $default  reduce using rule 25 (simple-opt)


State 44

    4 expr-list: expr-list . expr
   15 expr-opt: KEY_OPT '(' '(' expr-list . ')' ')'

    KEY_FALLBACK  shift, and go to state 9
    KEY_OPT       shift, and go to state 10
    STRNAME       shift, and go to state 11
    '('           shift, and go to state 12
    ')'           shift, and go to state 50

    expr             go to state 40
    expr-seq         go to state 14
    expr-par         go to state 15
    expr-fallback    go to state 16
    expr-opt         go to state 17
    expr-alt         go to state 18
    simple-expr      go to state 19
    simple-seq       go to state 20
    simple-par       go to state 21
    simple-fallback  go to state 22
    simple-opt       go to state 23
    simple-alt       go to state 24


State 45

   12 expr-seq: '(' expr-list ')' KEY_SEQ . '(' expr-list ')'

    '('  shift, and go to state 51


State 46

   13 expr-par: '(' expr-list ')' KEY_PAR . '(' expr-list ')'

    '('  shift, and go to state 52


State 47

   16 expr-alt: '(' expr-list ')' KEY_ALT . '(' expr-list ')'

    '('  shift, and go to state 53


State 48

   24 simple-fallback: KEY_FALLBACK '(' STRNAME ',' STRNAME . ')'

    ')'  shift, and go to state 54


State 49

   14 expr-fallback: KEY_FALLBACK '(' '(' expr-list ')' . ',' '(' expr-list ')' ')'

    ','  shift, and go to state 55


State 50

   15 expr-opt: KEY_OPT '(' '(' expr-list ')' . ')'

    ')'  shift, and go to state 56


State 51

   12 expr-seq: '(' expr-list ')' KEY_SEQ '(' . expr-list ')'

    $default  reduce using rule 5 (expr-list)

    expr-list  go to state 57


State 52

   13 expr-par: '(' expr-list ')' KEY_PAR '(' . expr-list ')'

    $default  reduce using rule 5 (expr-list)

    expr-list  go to state 58


State 53

   16 expr-alt: '(' expr-list ')' KEY_ALT '(' . expr-list ')'

    $default  reduce using rule 5 (expr-list)

    expr-list  go to state 59


State 54

   24 simple-fallback: KEY_FALLBACK '(' STRNAME ',' STRNAME ')' .

    $default  reduce using rule 24 (simple-fallback)


State 55

   14 expr-fallback: KEY_FALLBACK '(' '(' expr-list ')' ',' . '(' expr-list ')' ')'

    '('  shift, and go to state 60


State 56

   15 expr-opt: KEY_OPT '(' '(' expr-list ')' ')' .

    $default  reduce using rule 15 (expr-opt)


State 57

    4 expr-list: expr-list . expr
   12 expr-seq: '(' expr-list ')' KEY_SEQ '(' expr-list . ')'

    KEY_FALLBACK  shift, and go to state 9
    KEY_OPT       shift, and go to state 10
    STRNAME       shift, and go to state 11
    '('           shift, and go to state 12
    ')'           shift, and go to state 61

    expr             go to state 40
    expr-seq         go to state 14
    expr-par         go to state 15
    expr-fallback    go to state 16
    expr-opt         go to state 17
    expr-alt         go to state 18
    simple-expr      go to state 19
    simple-seq       go to state 20
    simple-par       go to state 21
    simple-fallback  go to state 22
    simple-opt       go to state 23
    simple-alt       go to state 24


State 58

    4 expr-list: expr-list . expr
   13 expr-par: '(' expr-list ')' KEY_PAR '(' expr-list . ')'

    KEY_FALLBACK  shift, and go to state 9
    KEY_OPT       shift, and go to state 10
    STRNAME       shift, and go to state 11
    '('           shift, and go to state 12
    ')'           shift, and go to state 62

    expr             go to state 40
    expr-seq         go to state 14
    expr-par         go to state 15
    expr-fallback    go to state 16
    expr-opt         go to state 17
    expr-alt         go to state 18
    simple-expr      go to state 19
    simple-seq       go to state 20
    simple-par       go to state 21
    simple-fallback  go to state 22
    simple-opt       go to state 23
    simple-alt       go to state 24


State 59

    4 expr-list: expr-list . expr
   16 expr-alt: '(' expr-list ')' KEY_ALT '(' expr-list . ')'

    KEY_FALLBACK  shift, and go to state 9
    KEY_OPT       shift, and go to state 10
    STRNAME       shift, and go to state 11
    '('           shift, and go to state 12
    ')'           shift, and go to state 63

    expr             go to state 40
    expr-seq         go to state 14
    expr-par         go to state 15
    expr-fallback    go to state 16
    expr-opt         go to state 17
    expr-alt         go to state 18
    simple-expr      go to state 19
    simple-seq       go to state 20
    simple-par       go to state 21
    simple-fallback  go to state 22
    simple-opt       go to state 23
    simple-alt       go to state 24


State 60

   14 expr-fallback: KEY_FALLBACK '(' '(' expr-list ')' ',' '(' . expr-list ')' ')'

    $default  reduce using rule 5 (expr-list)

    expr-list  go to state 64


State 61

   12 expr-seq: '(' expr-list ')' KEY_SEQ '(' expr-list ')' .

    $default  reduce using rule 12 (expr-seq)


State 62

   13 expr-par: '(' expr-list ')' KEY_PAR '(' expr-list ')' .

    $default  reduce using rule 13 (expr-par)


State 63

   16 expr-alt: '(' expr-list ')' KEY_ALT '(' expr-list ')' .

    $default  reduce using rule 16 (expr-alt)


State 64

    4 expr-list: expr-list . expr
   14 expr-fallback: KEY_FALLBACK '(' '(' expr-list ')' ',' '(' expr-list . ')' ')'

    KEY_FALLBACK  shift, and go to state 9
    KEY_OPT       shift, and go to state 10
    STRNAME       shift, and go to state 11
    '('           shift, and go to state 12
    ')'           shift, and go to state 65

    expr             go to state 40
    expr-seq         go to state 14
    expr-par         go to state 15
    expr-fallback    go to state 16
    expr-opt         go to state 17
    expr-alt         go to state 18
    simple-expr      go to state 19
    simple-seq       go to state 20
    simple-par       go to state 21
    simple-fallback  go to state 22
    simple-opt       go to state 23
    simple-alt       go to state 24


State 65

   14 expr-fallback: KEY_FALLBACK '(' '(' expr-list ')' ',' '(' expr-list ')' . ')'

    ')'  shift, and go to state 66


State 66

   14 expr-fallback: KEY_FALLBACK '(' '(' expr-list ')' ',' '(' expr-list ')' ')' .

    $default  reduce using rule 14 (expr-fallback)
